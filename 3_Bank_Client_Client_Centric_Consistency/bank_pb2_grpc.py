# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bank_pb2 as bank__pb2


class createStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MsgDeliveryRead = channel.unary_unary(
                '/bank.create/MsgDeliveryRead',
                request_serializer=bank__pb2.clientRequestRead.SerializeToString,
                response_deserializer=bank__pb2.branchResponse.FromString,
                )
        self.MsgDeliveryWrite = channel.unary_unary(
                '/bank.create/MsgDeliveryWrite',
                request_serializer=bank__pb2.clientRequestWrite.SerializeToString,
                response_deserializer=bank__pb2.branchResponse.FromString,
                )
        self.propagate = channel.unary_unary(
                '/bank.create/propagate',
                request_serializer=bank__pb2.BranchRequest.SerializeToString,
                response_deserializer=bank__pb2.updateResponse.FromString,
                )


class createServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MsgDeliveryRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MsgDeliveryWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def propagate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_createServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MsgDeliveryRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MsgDeliveryRead,
                    request_deserializer=bank__pb2.clientRequestRead.FromString,
                    response_serializer=bank__pb2.branchResponse.SerializeToString,
            ),
            'MsgDeliveryWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.MsgDeliveryWrite,
                    request_deserializer=bank__pb2.clientRequestWrite.FromString,
                    response_serializer=bank__pb2.branchResponse.SerializeToString,
            ),
            'propagate': grpc.unary_unary_rpc_method_handler(
                    servicer.propagate,
                    request_deserializer=bank__pb2.BranchRequest.FromString,
                    response_serializer=bank__pb2.updateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bank.create', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class create(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MsgDeliveryRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.create/MsgDeliveryRead',
            bank__pb2.clientRequestRead.SerializeToString,
            bank__pb2.branchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MsgDeliveryWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.create/MsgDeliveryWrite',
            bank__pb2.clientRequestWrite.SerializeToString,
            bank__pb2.branchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def propagate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.create/propagate',
            bank__pb2.BranchRequest.SerializeToString,
            bank__pb2.updateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
